swagger: "2.0"
info: 
  version: "0.0.1"
  title: "project demo"
  description: "A simple service to get data from a cloud storage service"
  termsOfService: "http://swagger.io/terms/"
  contact: 
    name: "Cloudmesh REST Service Example"
  license: 
    name: "Apache"
host: "localhost:8080"
basePath: "/project19"
schemes: 
  - "http"
consumes: 
  - "application/json"
produces: 
  - "application/json"
paths: 
  /cpu:
    get:
      tags:
        - CPU
      operationId: cpu.get_processor_name
      description: "Returns cpu information of the hosting server"
      produces: 
        - "application/json"
      responses: 
        "200":
          description: "CPU info"
          schema: 
            $ref: "#/definitions/CPU"

  /data/output/<output>:
    get:
      tags:
        - DATA
      operationId: data.download
      description: "Downloads data from url"
      produces: 
        - "application/json"
      responses: 
        "200":
          description: "Data info"
          schema: {}
  /partition/<filename>/ratio/<ratio>:
    get:
      tags:
        - PARTITION
      operationId: partition.partition
      description: "Split up downloaded data"
      produces: 
        - "application/json"
      responses: 
        "200":
          description: "Split data into test and train sets"
          schema: {}
  /test/get/data:
    get:
      tags:
        - TEST
      operationId: testdata.gettestdata
      description: "get test data"
      produces: 
        - "application/json"
      responses: 
        "200":
          description: "test data"
          schema: {}

  /train/get/data:
    get:
      tags:
        - TRAIN
      operationId: traindata.gettraindata
      description: "get test data"
      produces: 
        - "application/json"
      responses: 
        "200":
          description: "train data"
          schema: {}

  /experiment/svm:
    get:
      tags:
        - SVM
      operationId: svm.svm
      description: "perform svm"
      produces: 
        - "application/json"
      responses: 
        "200":
          description: "perform svm"
          schema: {}
            
definitions:
  CPU:
    type: "object"
    required: 
      - "model"
    properties: 
      model:
        type: "string"


